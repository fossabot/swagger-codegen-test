# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HasOnlyReadOnly(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, bar: str=None, foo: str=None):  # noqa: E501
        """HasOnlyReadOnly - a model defined in Swagger

        :param bar: The bar of this HasOnlyReadOnly.  # noqa: E501
        :type bar: str
        :param foo: The foo of this HasOnlyReadOnly.  # noqa: E501
        :type foo: str
        """
        self.swagger_types = {
            'bar': str,
            'foo': str
        }

        self.attribute_map = {
            'bar': 'bar',
            'foo': 'foo'
        }
        self._bar = bar
        self._foo = foo

    @classmethod
    def from_dict(cls, dikt) -> 'HasOnlyReadOnly':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The hasOnlyReadOnly of this HasOnlyReadOnly.  # noqa: E501
        :rtype: HasOnlyReadOnly
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bar(self) -> str:
        """Gets the bar of this HasOnlyReadOnly.


        :return: The bar of this HasOnlyReadOnly.
        :rtype: str
        """
        return self._bar

    @bar.setter
    def bar(self, bar: str):
        """Sets the bar of this HasOnlyReadOnly.


        :param bar: The bar of this HasOnlyReadOnly.
        :type bar: str
        """

        self._bar = bar

    @property
    def foo(self) -> str:
        """Gets the foo of this HasOnlyReadOnly.


        :return: The foo of this HasOnlyReadOnly.
        :rtype: str
        """
        return self._foo

    @foo.setter
    def foo(self, foo: str):
        """Sets the foo of this HasOnlyReadOnly.


        :param foo: The foo of this HasOnlyReadOnly.
        :type foo: str
        """

        self._foo = foo
