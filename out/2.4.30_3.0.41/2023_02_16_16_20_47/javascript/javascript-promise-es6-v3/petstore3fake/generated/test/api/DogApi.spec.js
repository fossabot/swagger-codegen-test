/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerPetstore);
  }
}(this, function(expect, SwaggerPetstore) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerPetstore.DogApi();
  });

  describe('(package)', function() {
    describe('DogApi', function() {
      describe('addDog', function() {
        it('should call addDog successfully', function(done) {
          // TODO: uncomment, update parameter values for addDog call
          /*

          instance.addDog(body).then(function(data) {

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteDog', function() {
        it('should call deleteDog successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteDog call
          /*
          var opts = {};

          instance.deleteDog(dogId, opts).then(function(data) {

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getDogById', function() {
        it('should call getDogById successfully', function(done) {
          // TODO: uncomment, update parameter values for getDogById call and complete the assertions
          /*

          instance.getDogById(dogId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SwaggerPetstore.Dog);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateDog', function() {
        it('should call updateDog successfully', function(done) {
          // TODO: uncomment, update parameter values for updateDog call
          /*

          instance.updateDog(body).then(function(data) {

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateDogWithForm', function() {
        it('should call updateDogWithForm successfully', function(done) {
          // TODO: uncomment, update parameter values for updateDogWithForm call
          /*
          var opts = {};

          instance.updateDogWithForm(dogId, opts).then(function(data) {

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
