/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: " \
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagEnumArrays
 */
public class SwagEnumArrays implements Swagger.MappedProperties {
    /**
     * Gets or Sets justSymbol
     */
    public enum JustSymbolEnum {
        GREATER_THAN_OR_EQUAL_TO,
        DOLLAR
    }

    /**
     * Get justSymbol
     * @return justSymbol
     */
    public JustSymbolEnum justSymbol { get; set; }

    /**
     * Gets or Sets arrayEnum
     */
    public enum ArrayEnumEnum {
        FISH,
        CRAB
    }

    /**
     * Get arrayEnum
     * @return arrayEnum
     */
    public List<ArrayEnumEnum> arrayEnum { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'just_symbol' => 'justSymbol',
        'array_enum' => 'arrayEnum'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagEnumArrays() {
        arrayEnum = new List<ArrayEnumEnum>();
    }

    public static SwagEnumArrays getExample() {
        SwagEnumArrays enumArrays = new SwagEnumArrays();
        enumArrays.justSymbol = JustSymbolEnum.GREATER_THAN_OR_EQUAL_TO;
        enumArrays.arrayEnum = List<ArrayEnumEnum>.LIST_ARRAYENUMENUM_NEW_LIST_STRING_FISH_;
        return enumArrays;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagEnumArrays) {
            SwagEnumArrays enumArrays = (SwagEnumArrays) obj;
            return this.justSymbol == enumArrays.justSymbol
                && this.arrayEnum == enumArrays.arrayEnum;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (justSymbol == null ? 0 : System.hashCode(justSymbol));
        hashCode = (17 * hashCode) + (arrayEnum == null ? 0 : System.hashCode(arrayEnum));
        return hashCode;
    }
}

