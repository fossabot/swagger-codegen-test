/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: " \
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagMapTest
 */
public class SwagMapTest implements Swagger.MappedProperties {
    /**
     * Get mapMapOfString
     * @return mapMapOfString
     */
    public Map<String, Map<String, String>> mapMapOfString { get; set; }

    /**
     * Gets or Sets r_inner
     */
    public enum RInnerEnum {
        UPPER,
        LOWER
    }

    /**
     * Get mapOfEnumString
     * @return mapOfEnumString
     */
    public Map<String, RInnerEnum> mapOfEnumString { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'map_map_of_string' => 'mapMapOfString',
        'map_of_enum_string' => 'mapOfEnumString'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagMapTest() {
        mapMapOfString = new Map<String, Map<String, String>>();
        mapOfEnumString = new Map<String, RInnerEnum>();
    }

    public static SwagMapTest getExample() {
        SwagMapTest mapTest = new SwagMapTest();
        mapTest.mapMapOfString = new Map<String, Map<String, String>>{'key'=>new Map<String, String>{'key'=>'aeiou'}};
        mapTest.mapOfEnumString = Map<String, RInnerEnum>.NEW_MAP_STRING_STRING_KEY_UPPER_;
        return mapTest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagMapTest) {
            SwagMapTest mapTest = (SwagMapTest) obj;
            return this.mapMapOfString == mapTest.mapMapOfString
                && this.mapOfEnumString == mapTest.mapOfEnumString;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (mapMapOfString == null ? 0 : System.hashCode(mapMapOfString));
        hashCode = (17 * hashCode) + (mapOfEnumString == null ? 0 : System.hashCode(mapOfEnumString));
        return hashCode;
    }
}

