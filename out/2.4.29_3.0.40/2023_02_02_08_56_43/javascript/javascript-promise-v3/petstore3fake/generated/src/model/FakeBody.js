/**
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The FakeBody model module.
* @module model/FakeBody
* @version 1.0.0
*/
export default class FakeBody {
    /**
    * Constructs a new <code>FakeBody</code>.
    * @alias module:model/FakeBody
    * @class
    * @param _number {Number} None
    * @param _double {Number} None
    * @param patternWithoutDelimiter {String} None
    * @param _byte {Blob} None
    */

    constructor(_number, _double, patternWithoutDelimiter, _byte) {
        
        
        this['number'] = _number;
        this['double'] = _double;
        this['pattern_without_delimiter'] = patternWithoutDelimiter;
        this['byte'] = _byte;
        
    }

    /**
    * Constructs a <code>FakeBody</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/FakeBody} obj Optional instance to populate.
    * @return {module:model/FakeBody} The populated <code>FakeBody</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FakeBody();
                        
            
            if (data.hasOwnProperty('integer')) {
                obj['integer'] = ApiClient.convertToType(data['integer'], 'Number');
            }
            if (data.hasOwnProperty('int32')) {
                obj['int32'] = ApiClient.convertToType(data['int32'], 'Number');
            }
            if (data.hasOwnProperty('int64')) {
                obj['int64'] = ApiClient.convertToType(data['int64'], 'Number');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('float')) {
                obj['float'] = ApiClient.convertToType(data['float'], 'Number');
            }
            if (data.hasOwnProperty('double')) {
                obj['double'] = ApiClient.convertToType(data['double'], 'Number');
            }
            if (data.hasOwnProperty('string')) {
                obj['string'] = ApiClient.convertToType(data['string'], 'String');
            }
            if (data.hasOwnProperty('pattern_without_delimiter')) {
                obj['pattern_without_delimiter'] = ApiClient.convertToType(data['pattern_without_delimiter'], 'String');
            }
            if (data.hasOwnProperty('byte')) {
                obj['byte'] = ApiClient.convertToType(data['byte'], 'Blob');
            }
            if (data.hasOwnProperty('binary')) {
                obj['binary'] = ApiClient.convertToType(data['binary'], 'Blob');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('dateTime')) {
                obj['dateTime'] = ApiClient.convertToType(data['dateTime'], 'Date');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('callback')) {
                obj['callback'] = ApiClient.convertToType(data['callback'], 'String');
            }
        }
        return obj;
    }

    /**
    * None
    * @member {Number} integer
    */
    'integer' = undefined;
    /**
    * None
    * @member {Number} int32
    */
    'int32' = undefined;
    /**
    * None
    * @member {Number} int64
    */
    'int64' = undefined;
    /**
    * None
    * @member {Number} number
    */
    'number' = undefined;
    /**
    * None
    * @member {Number} float
    */
    'float' = undefined;
    /**
    * None
    * @member {Number} double
    */
    'double' = undefined;
    /**
    * None
    * @member {String} string
    */
    'string' = undefined;
    /**
    * None
    * @member {String} pattern_without_delimiter
    */
    'pattern_without_delimiter' = undefined;
    /**
    * None
    * @member {Blob} byte
    */
    'byte' = undefined;
    /**
    * None
    * @member {Blob} binary
    */
    'binary' = undefined;
    /**
    * None
    * @member {Date} date
    */
    'date' = undefined;
    /**
    * None
    * @member {Date} dateTime
    */
    'dateTime' = undefined;
    /**
    * None
    * @member {String} password
    */
    'password' = undefined;
    /**
    * None
    * @member {String} callback
    */
    'callback' = undefined;




}
