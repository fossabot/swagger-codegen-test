--  Swagger Petstore
--  This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
--
--  OpenAPI spec version: 1.0.0
--  Contact: apiteam@swagger.io
--
--  NOTE: This package is auto generated by the swagger code generator 2.4.32.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.
with Samples.Petstore.Models;
with Swagger.Clients;
package Samples.Petstore.Clients is

   type Client_Type is new Swagger.Clients.Client_Type with null record;

   --  To test special tags
   --  To test special tags
   procedure Test_Special_Tags
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Client_Type;
       Result : out Samples.Petstore.Models.Client_Type);

   --  
   --  Test serialization of outer boolean types
   procedure Fake_Outer_Boolean_Serialize
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.OuterBoolean_Type;
       Result : out Samples.Petstore.Models.OuterBoolean_Type);

   --  
   --  Test serialization of object with outer number type
   procedure Fake_Outer_Composite_Serialize
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.OuterComposite_Type;
       Result : out Samples.Petstore.Models.OuterComposite_Type);

   --  
   --  Test serialization of outer number types
   procedure Fake_Outer_Number_Serialize
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.OuterNumber_Type;
       Result : out Samples.Petstore.Models.OuterNumber_Type);

   --  
   --  Test serialization of outer string types
   procedure Fake_Outer_String_Serialize
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.OuterString_Type;
       Result : out Samples.Petstore.Models.OuterString_Type);

   --  
   procedure Test_Body_With_Query_Params
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.User_Type;
       Query : in Swagger.UString);

   --  To test \"client\" model
   --  To test "client" model
   procedure Test_Client_Model
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Client_Type;
       Result : out Samples.Petstore.Models.Client_Type);

   --  Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
   --  Fake endpoint for testing various parameters
   --  假端點
   --  偽のエンドポイント
   --  가짜 엔드 포인트
   procedure Test_Endpoint_Parameters
      (Client : in out Client_Type;
       Number : in Swagger.Number;
       Double : in double;
       Pattern_Without_Delimiter : in Swagger.UString;
       Byte : in ByteArray_Type;
       Integer : in Swagger.Nullable_Integer;
       Int32 : in Swagger.Nullable_Integer;
       Int64 : in Swagger.Nullable_Long;
       Float : in float;
       String : in Swagger.Nullable_UString;
       Binary : in ;
       Date : in Swagger.Nullable_Date;
       Date_Time : in Swagger.Nullable_Date;
       Password : in Swagger.Nullable_UString;
       Callback : in Swagger.Nullable_UString);

   --  To test enum parameters
   --  To test enum parameters
   procedure Test_Enum_Parameters
      (Client : in out Client_Type;
       Enum_Form_String_Array : in Swagger.Nullable_UString_Vectors.Vector;
       Enum_Form_String : in Swagger.Nullable_UString;
       Enum_Header_String_Array : in Swagger.Nullable_UString_Vectors.Vector;
       Enum_Header_String : in Swagger.Nullable_UString;
       Enum_Query_String_Array : in Swagger.Nullable_UString_Vectors.Vector;
       Enum_Query_String : in Swagger.Nullable_UString;
       Enum_Query_Integer : in Swagger.Nullable_Integer;
       Enum_Query_Double : in double);

   --  test inline additionalProperties
   procedure Test_Inline_Additional_Properties
      (Client : in out Client_Type;
       Param : in Samples.Petstore.Models.Swagger.Object);

   --  test json serialization of form data
   procedure Test_Json_Form_Data
      (Client : in out Client_Type;
       Param : in Swagger.UString;
       Param2 : in Swagger.UString);

   --  To test class name in snake case
   --  To test class name in snake case
   procedure Test_Classname
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Client_Type;
       Result : out Samples.Petstore.Models.Client_Type);

   --  Add a new pet to the store
   procedure Add_Pet
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Pet_Type);

   --  Deletes a pet
   procedure Delete_Pet
      (Client : in out Client_Type;
       Pet_Id : in Swagger.Long;
       Api_Key : in Swagger.Nullable_UString);

   --  Finds Pets by status
   --  Multiple status values can be provided with comma separated strings
   procedure Find_Pets_By_Status
      (Client : in out Client_Type;
       Status : in Swagger.Nullable_UString_Vectors.Vector;
       Result : out Samples.Petstore.Models.Pet_Type_Vectors.Vector);

   --  Finds Pets by tags
   --  Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
   procedure Find_Pets_By_Tags
      (Client : in out Client_Type;
       Tags : in Swagger.Nullable_UString_Vectors.Vector;
       Result : out Samples.Petstore.Models.Pet_Type_Vectors.Vector);

   --  Find pet by ID
   --  Returns a single pet
   procedure Get_Pet_By_Id
      (Client : in out Client_Type;
       Pet_Id : in Swagger.Long;
       Result : out Samples.Petstore.Models.Pet_Type);

   --  Update an existing pet
   procedure Update_Pet
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Pet_Type);

   --  Updates a pet in the store with form data
   procedure Update_Pet_With_Form
      (Client : in out Client_Type;
       Pet_Id : in Swagger.Long;
       Name : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString);

   --  uploads an image
   procedure Upload_File
      (Client : in out Client_Type;
       Pet_Id : in Swagger.Long;
       Additional_Metadata : in Swagger.Nullable_UString;
       File : in Swagger.File_Part_Type;
       Result : out Samples.Petstore.Models.ApiResponse_Type);

   --  Delete purchase order by ID
   --  For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
   procedure Delete_Order
      (Client : in out Client_Type;
       Order_Id : in Swagger.UString);

   --  Returns pet inventories by status
   --  Returns a map of status codes to quantities
   procedure Get_Inventory
      (Client : in out Client_Type;
       Result : out Swagger.Nullable_Integer_Map);

   --  Find purchase order by ID
   --  For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions
   procedure Get_Order_By_Id
      (Client : in out Client_Type;
       Order_Id : in Swagger.Long;
       Result : out Samples.Petstore.Models.Order_Type);

   --  Place an order for a pet
   procedure Place_Order
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.Order_Type;
       Result : out Samples.Petstore.Models.Order_Type);

   --  Create user
   --  This can only be done by the logged in user.
   procedure Create_User
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.User_Type);

   --  Creates list of users with given input array
   procedure Create_Users_With_Array_Input
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.User_Type_Vectors.Vector);

   --  Creates list of users with given input array
   procedure Create_Users_With_List_Input
      (Client : in out Client_Type;
       P_Body : in Samples.Petstore.Models.User_Type_Vectors.Vector);

   --  Delete user
   --  This can only be done by the logged in user.
   procedure Delete_User
      (Client : in out Client_Type;
       Username : in Swagger.UString);

   --  Get user by user name
   procedure Get_User_By_Name
      (Client : in out Client_Type;
       Username : in Swagger.UString;
       Result : out Samples.Petstore.Models.User_Type);

   --  Logs user into the system
   procedure Login_User
      (Client : in out Client_Type;
       Username : in Swagger.UString;
       Password : in Swagger.UString;
       Result : out Swagger.UString);

   --  Logs out current logged in user session
   procedure Logout_User
      (Client : in out Client_Type);

   --  Updated user
   --  This can only be done by the logged in user.
   procedure Update_User
      (Client : in out Client_Type;
       Username : in Swagger.UString;
       P_Body : in Samples.Petstore.Models.User_Type);

end Samples.Petstore.Clients;
