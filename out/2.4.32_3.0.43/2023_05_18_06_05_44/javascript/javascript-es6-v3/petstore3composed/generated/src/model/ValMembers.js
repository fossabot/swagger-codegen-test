/*
 * Swagger Petstore
 * This is a sample Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ValMembers model module.
 * @module model/ValMembers
 * @version 1.0.0
 */
export class ValMembers {
  /**
   * Constructs a new <code>ValMembers</code>.
   * Business Term: Scheme Members Definition: Information about the Members of the Scheme. Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
   * @alias module:model/ValMembers
   * @class
   * @param valMember {Array.<Object>} Business Term: Scheme Member Definition: Information about a Member of the Scheme. Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
   */
  constructor(valMember) {
    this.valMember = valMember;
  }

  /**
   * Constructs a <code>ValMembers</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ValMembers} obj Optional instance to populate.
   * @return {module:model/ValMembers} The populated <code>ValMembers</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ValMembers();
      if (data.hasOwnProperty('val_member'))
        obj.valMember = ApiClient.convertToType(data['val_member'], [OneOfvalMembersValMemberItems]);
    }
    return obj;
  }
}

/**
 * Business Term: Scheme Member Definition: Information about a Member of the Scheme. Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
 * @member {Array.<Object>} valMember
 */
ValMembers.prototype.valMember = undefined;

