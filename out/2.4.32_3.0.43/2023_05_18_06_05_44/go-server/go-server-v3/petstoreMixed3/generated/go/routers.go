/*
 * Swagger Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v3/",
		Index,
	},

	Route{
		"AddAnimal",
		strings.ToUpper("Post"),
		"/v3/animal",
		AddAnimal,
	},

	Route{
		"DeleteAnimal",
		strings.ToUpper("Delete"),
		"/v3/animal/{animalId}",
		DeleteAnimal,
	},

	Route{
		"GetAnimalById",
		strings.ToUpper("Get"),
		"/v3/animal/{animalId}",
		GetAnimalById,
	},

	Route{
		"UpdateAnimal",
		strings.ToUpper("Put"),
		"/v3/animal",
		UpdateAnimal,
	},

	Route{
		"UpdateAnimalWithForm",
		strings.ToUpper("Post"),
		"/v3/animal/{animalId}",
		UpdateAnimalWithForm,
	},

	Route{
		"TestSpecialTags",
		strings.ToUpper("Patch"),
		"/v3/another-fake/dummy",
		TestSpecialTags,
	},

	Route{
		"AddDog",
		strings.ToUpper("Post"),
		"/v3/dog",
		AddDog,
	},

	Route{
		"DeleteDog",
		strings.ToUpper("Delete"),
		"/v3/dog/{dogId}",
		DeleteDog,
	},

	Route{
		"GetDogById",
		strings.ToUpper("Get"),
		"/v3/dog/{dogId}",
		GetDogById,
	},

	Route{
		"UpdateDog",
		strings.ToUpper("Put"),
		"/v3/dog",
		UpdateDog,
	},

	Route{
		"UpdateDogWithForm",
		strings.ToUpper("Post"),
		"/v3/dog/{dogId}",
		UpdateDogWithForm,
	},

	Route{
		"FakeOuterBooleanSerialize",
		strings.ToUpper("Post"),
		"/v3/fake/outer/boolean",
		FakeOuterBooleanSerialize,
	},

	Route{
		"FakeOuterCompositeSerialize",
		strings.ToUpper("Post"),
		"/v3/fake/outer/composite",
		FakeOuterCompositeSerialize,
	},

	Route{
		"FakeOuterNumberSerialize",
		strings.ToUpper("Post"),
		"/v3/fake/outer/number",
		FakeOuterNumberSerialize,
	},

	Route{
		"FakeOuterStringSerialize",
		strings.ToUpper("Post"),
		"/v3/fake/outer/string",
		FakeOuterStringSerialize,
	},

	Route{
		"TestClientModel",
		strings.ToUpper("Patch"),
		"/v3/fake",
		TestClientModel,
	},

	Route{
		"TestEndpointParameters",
		strings.ToUpper("Post"),
		"/v3/fake",
		TestEndpointParameters,
	},

	Route{
		"TestEnumParameters",
		strings.ToUpper("Get"),
		"/v3/fake",
		TestEnumParameters,
	},

	Route{
		"TestEnumRequestBody",
		strings.ToUpper("Post"),
		"/v3/fake/enum/form",
		TestEnumRequestBody,
	},

	Route{
		"TestInlineAdditionalProperties",
		strings.ToUpper("Post"),
		"/v3/fake/inline-additionalProperties",
		TestInlineAdditionalProperties,
	},

	Route{
		"TestJsonFormData",
		strings.ToUpper("Post"),
		"/v3/fake/jsonFormData",
		TestJsonFormData,
	},

	Route{
		"TestClassname",
		strings.ToUpper("Patch"),
		"/v3/fake_classname_test",
		TestClassname,
	},

	Route{
		"MasterOperation",
		strings.ToUpper("Get"),
		"/v3/master",
		MasterOperation,
	},

	Route{
		"AddParrot",
		strings.ToUpper("Post"),
		"/v3/parrot",
		AddParrot,
	},

	Route{
		"GetParrots",
		strings.ToUpper("Get"),
		"/v3/parrot",
		GetParrots,
	},

	Route{
		"UpdateParrots",
		strings.ToUpper("Put"),
		"/v3/parrot",
		UpdateParrots,
	},

	Route{
		"AddPet",
		strings.ToUpper("Post"),
		"/v3/pet",
		AddPet,
	},

	Route{
		"DeletePet",
		strings.ToUpper("Delete"),
		"/v3/pet/{petId}",
		DeletePet,
	},

	Route{
		"DoCategoryStuff",
		strings.ToUpper("Post"),
		"/v3/pet/category",
		DoCategoryStuff,
	},

	Route{
		"FindPetsByStatus",
		strings.ToUpper("Get"),
		"/v3/pet/findByStatus",
		FindPetsByStatus,
	},

	Route{
		"FindPetsByTags",
		strings.ToUpper("Get"),
		"/v3/pet/findByTags",
		FindPetsByTags,
	},

	Route{
		"GetAllPets",
		strings.ToUpper("Get"),
		"/v3/allPets",
		GetAllPets,
	},

	Route{
		"GetPetById",
		strings.ToUpper("Get"),
		"/v3/pet/{petId}",
		GetPetById,
	},

	Route{
		"GetRandomPet",
		strings.ToUpper("Get"),
		"/v3/randomPet",
		GetRandomPet,
	},

	Route{
		"UpdatePet",
		strings.ToUpper("Put"),
		"/v3/pet",
		UpdatePet,
	},

	Route{
		"UpdatePetWithForm",
		strings.ToUpper("Post"),
		"/v3/pet/{petId}",
		UpdatePetWithForm,
	},

	Route{
		"UploadFile",
		strings.ToUpper("Post"),
		"/v3/pet/{petId}/uploadImage",
		UploadFile,
	},

	Route{
		"DeleteOrder",
		strings.ToUpper("Delete"),
		"/v3/store/order/{order_id}",
		DeleteOrder,
	},

	Route{
		"GetInventory",
		strings.ToUpper("Get"),
		"/v3/store/inventory",
		GetInventory,
	},

	Route{
		"GetOrderById",
		strings.ToUpper("Get"),
		"/v3/store/order/{order_id}",
		GetOrderById,
	},

	Route{
		"PlaceOrder",
		strings.ToUpper("Post"),
		"/v3/store/order",
		PlaceOrder,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/v3/user",
		CreateUser,
	},

	Route{
		"CreateUsersWithArrayInput",
		strings.ToUpper("Post"),
		"/v3/user/createWithArray",
		CreateUsersWithArrayInput,
	},

	Route{
		"CreateUsersWithListInput",
		strings.ToUpper("Post"),
		"/v3/user/createWithList",
		CreateUsersWithListInput,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/v3/user/{username}",
		DeleteUser,
	},

	Route{
		"GetUserByName",
		strings.ToUpper("Get"),
		"/v3/user/{username}",
		GetUserByName,
	},

	Route{
		"LoginUser",
		strings.ToUpper("Get"),
		"/v3/user/login",
		LoginUser,
	},

	Route{
		"LogoutUser",
		strings.ToUpper("Get"),
		"/v3/user/logout",
		LogoutUser,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/v3/user/{username}",
		UpdateUser,
	},
}
