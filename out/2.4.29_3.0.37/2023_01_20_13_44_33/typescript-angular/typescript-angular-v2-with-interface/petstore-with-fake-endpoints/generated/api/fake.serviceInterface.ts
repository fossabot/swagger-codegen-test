/**
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Headers }                                           from '@angular/http';

import { Observable }                                        from 'rxjs/Observable';

import { Client } from '../model/client';
import { OuterBoolean } from '../model/outerBoolean';
import { OuterComposite } from '../model/outerComposite';
import { OuterNumber } from '../model/outerNumber';
import { OuterString } from '../model/outerString';
import { User } from '../model/user';


import { Configuration }                                     from '../configuration';


export interface FakeServiceInterface {
    defaultHeaders: Headers;
    configuration: Configuration;
    [others: string]: any;

    /**
    * 
    * Test serialization of outer boolean types
    * @param body Input boolean as post body
    */
    fakeOuterBooleanSerialize(body?: OuterBoolean, extraHttpRequestParams?: any): Observable<OuterBoolean>;

    /**
    * 
    * Test serialization of object with outer number type
    * @param body Input composite as post body
    */
    fakeOuterCompositeSerialize(body?: OuterComposite, extraHttpRequestParams?: any): Observable<OuterComposite>;

    /**
    * 
    * Test serialization of outer number types
    * @param body Input number as post body
    */
    fakeOuterNumberSerialize(body?: OuterNumber, extraHttpRequestParams?: any): Observable<OuterNumber>;

    /**
    * 
    * Test serialization of outer string types
    * @param body Input string as post body
    */
    fakeOuterStringSerialize(body?: OuterString, extraHttpRequestParams?: any): Observable<OuterString>;

    /**
    * 
    * 
    * @param body 
    * @param query 
    */
    testBodyWithQueryParams(body: User, query: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * To test \&quot;client\&quot; model
    * To test \&quot;client\&quot; model
    * @param body client model
    */
    testClientModel(body: Client, extraHttpRequestParams?: any): Observable<Client>;

    /**
    * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 
    * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 
    * @param number None
    * @param _double None
    * @param patternWithoutDelimiter None
    * @param _byte None
    * @param integer None
    * @param int32 None
    * @param int64 None
    * @param _float None
    * @param string None
    * @param binary None
    * @param date None
    * @param dateTime None
    * @param password None
    * @param callback None
    */
    testEndpointParameters(number: number, _double: number, patternWithoutDelimiter: string, _byte: string, integer?: number, int32?: number, int64?: number, _float?: number, string?: string, binary?: string, date?: string, dateTime?: Date, password?: string, callback?: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * To test enum parameters
    * To test enum parameters
    * @param enumFormStringArray Form parameter enum test (string array)
    * @param enumFormString Form parameter enum test (string)
    * @param enumHeaderStringArray Header parameter enum test (string array)
    * @param enumHeaderString Header parameter enum test (string)
    * @param enumQueryStringArray Query parameter enum test (string array)
    * @param enumQueryString Query parameter enum test (string)
    * @param enumQueryInteger Query parameter enum test (double)
    * @param enumQueryDouble Query parameter enum test (double)
    */
    testEnumParameters(enumFormStringArray?: Array<'>' | '$'>, enumFormString?: '_abc' | '-efg' | '(xyz)', enumHeaderStringArray?: Array<'>' | '$'>, enumHeaderString?: '_abc' | '-efg' | '(xyz)', enumQueryStringArray?: Array<'>' | '$'>, enumQueryString?: '_abc' | '-efg' | '(xyz)', enumQueryInteger?: 1 | -2, enumQueryDouble?: 1.1 | -1.2, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * test inline additionalProperties
    * 
    * @param param request body
    */
    testInlineAdditionalProperties(param: any, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * test json serialization of form data
    * 
    * @param param field1
    * @param param2 field2
    */
    testJsonFormData(param: string, param2: string, extraHttpRequestParams?: any): Observable<{}>;

}
