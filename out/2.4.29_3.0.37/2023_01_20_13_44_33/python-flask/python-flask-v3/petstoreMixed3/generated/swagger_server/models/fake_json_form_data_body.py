# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FakeJsonFormDataBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, param: str=None, param2: str=None):  # noqa: E501
        """FakeJsonFormDataBody - a model defined in Swagger

        :param param: The param of this FakeJsonFormDataBody.  # noqa: E501
        :type param: str
        :param param2: The param2 of this FakeJsonFormDataBody.  # noqa: E501
        :type param2: str
        """
        self.swagger_types = {
            'param': str,
            'param2': str
        }

        self.attribute_map = {
            'param': 'param',
            'param2': 'param2'
        }
        self._param = param
        self._param2 = param2

    @classmethod
    def from_dict(cls, dikt) -> 'FakeJsonFormDataBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The fake_jsonFormData_body of this FakeJsonFormDataBody.  # noqa: E501
        :rtype: FakeJsonFormDataBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def param(self) -> str:
        """Gets the param of this FakeJsonFormDataBody.

        field1  # noqa: E501

        :return: The param of this FakeJsonFormDataBody.
        :rtype: str
        """
        return self._param

    @param.setter
    def param(self, param: str):
        """Sets the param of this FakeJsonFormDataBody.

        field1  # noqa: E501

        :param param: The param of this FakeJsonFormDataBody.
        :type param: str
        """
        if param is None:
            raise ValueError("Invalid value for `param`, must not be `None`")  # noqa: E501

        self._param = param

    @property
    def param2(self) -> str:
        """Gets the param2 of this FakeJsonFormDataBody.

        field2  # noqa: E501

        :return: The param2 of this FakeJsonFormDataBody.
        :rtype: str
        """
        return self._param2

    @param2.setter
    def param2(self, param2: str):
        """Sets the param2 of this FakeJsonFormDataBody.

        field2  # noqa: E501

        :param param2: The param2 of this FakeJsonFormDataBody.
        :type param2: str
        """
        if param2 is None:
            raise ValueError("Invalid value for `param2`, must not be `None`")  # noqa: E501

        self._param2 = param2
