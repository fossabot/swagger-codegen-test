=begin
#Swagger Petstore

#This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

OpenAPI spec version: 1.0.0
Contact: apiteam@swagger.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.36
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::EnumFormBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EnumFormBody' do
  before do
    # run before each test
    @instance = SwaggerClient::EnumFormBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EnumFormBody' do
    it 'should create an instance of EnumFormBody' do
      expect(@instance).to be_instance_of(SwaggerClient::EnumFormBody)
    end
  end
  describe 'test attribute "enum_form_string_array"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', [">", "$"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.enum_form_string_array = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "enum_form_string"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["_abc", "-efg", "(xyz)"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.enum_form_string = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "enum_query_double"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', ["1.1", "-1.2"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.enum_query_double = value }.not_to raise_error
      # end
    end
  end

end
