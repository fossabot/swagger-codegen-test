
****** generate ******

LANGUAGE spring
JOB_NAME spring-mvc-j8-async-server-v3___petstore3composed___
SPEC_URL PARAM https://raw.githubusercontent.com/swagger-api/swagger-codegen/d7d5b9a97447f40e130e132cdf0cf7ee7c626cb8/fixtures/immutable/specifications/v3/petstore3composed.yaml
SPEC_URL https://raw.githubusercontent.com/swagger-api/swagger-codegen/d7d5b9a97447f40e130e132cdf0cf7ee7c626cb8/fixtures/immutable/specifications/v3/petstore3composed.yaml
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=256M; support was removed in 8.0
15:17:58.773 [main] DEBUG io.swagger.codegen.v3.cli.SwaggerCodegen - there are not options for command 'langs'
15:17:58.775 [main] DEBUG io.swagger.codegen.v3.cli.SwaggerCodegen - there are not options for command 'version'
15:17:59.186 [Thread-1] DEBUG io.swagger.codegen.v3.config.CodegenConfigurator - Loaded raw data: openapi: 3.0.2
servers: []
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      operationId: addPet
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
    put:
      tags:
        - pet
      summary: Update an existing pet
      operationId: updatePet
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - pending
                - sold
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: >-
        Muliple tags can be provided with comma separated strings. Use\ \ tag1,
        tag2, tag3 for testing.
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      deprecated: true
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the pet
                  type: string
                status:
                  description: Updated status of the pet
                  type: string
    delete:
      tags:
        - pet
      summary: Deletes a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /pet/feed/{petId}:
    post:
      tags:
        - pet
      summary: Find pet by ID
      description: schedule pet feeding
      operationId: feedPet
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
        - name: petType
          in: query
          description: type of food
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: status
          required: true
          schema:
            type: string
        - name: sessionId
          in: cookie
          description: session id
          required: true
          schema:
            type: string
        - name: token
          in: header
          description: status
          required: true
          schema:
            type: string
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        200:
          description: successful operation

  '/pet/{petId}/uploadImage':
    post:
      tags:
        - pet
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary

  /pet/category:
    post:
      tags:
        - pet
      operationId: doCategoryStuff
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
  /store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - store
      summary: Place an order for a pet
      operationId: placeOrder
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true
  '/store/order/{orderId}':
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.\ \ Other
        values will generated exceptions
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: >-
        For valid response try integer IDs with positive integer value.\ \
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
  /user/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithArrayInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /parrot:
    post:
      tags:
        - pet
      summary: Add a new parrow to the store
      operationId: addParrot
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/Macaw"
                  - "$ref": "#/components/schemas/Parakeet"
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - "$ref": "#/components/schemas/Macaw"
                - "$ref": "#/components/schemas/Parakeet"

    put:
      tags:
        - pet
      summary: update parrots
      operationId: updateParrots
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  parrots:
                    type: array
                    items:
                      oneOf:
                        - "$ref": "#/components/schemas/Macaw"
                        - "$ref": "#/components/schemas/Parakeet"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parrots:
                  type: array
                  items:
                    anyOf:
                      - "$ref": "#/components/schemas/Macaw"
                      - "$ref": "#/components/schemas/Parakeet"

    get:
      tags:
        - pet
      summary: get Parrots
      operationId: getParrots
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - "$ref": "#/components/schemas/Macaw"
                    - "$ref": "#/components/schemas/Parakeet"
  /test:
    get:
      security:
        - bearer: []
      operationId: testMethod
      responses:
        200:
          description: peticion realizada con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      example:
        - id: 100
          name: Mammal
          subcategories:
            - id: 110
              name: Yinotheria
            - id: 120
              name: Theriiformes
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Test:
      type: string
      example: ""

    PartOne:
      properties:
        name:
          type: string
          description: A test description
    PartTwo:
      properties:
        id:
          type: string
    PartThree:
      properties:
        otherId:
          type: string
    PartFour:
      properties:
        otherIdPart:
          type: string
    PartMaster:
      properties:
        destination:
          oneOf:
            - $ref: '#/components/schemas/PartOne'
            - $ref: '#/components/schemas/PartTwo'
        origin:
          oneOf:
            - $ref: '#/components/schemas/PartThree'
            - $ref: '#/components/schemas/PartFour'

    Pet:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
        part:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/Dog"
              - $ref: "#/components/schemas/Cat"
      xml:
        name: Pet

    Pup:
      oneOf:
        - $ref: "#/components/schemas/Dog"
        - $ref: "#/components/schemas/Cat"
      properties:
        id:
          type: integer
          format: int64
    AllPetsResponse:
      type: array
      items:
        oneOf:
          - $ref: "#/components/schemas/Dog"
          - $ref: "#/components/schemas/Cat"
        discriminator:
          propertyName: pet_type

    Dog:
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            bark:
              type: boolean
            breed:
              type: string
              enum: [Dingo, Husky, Retriever, Shepherd]
    Cat:
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            hunts:
              type: boolean
            age:
              type: integer
    Macaw:
      type: object
      properties:
        color:
          type: string
        singer:
          type: boolean

    Parakeet:
      type: object
      properties:
        color:
          type: string
        soundRepeater:
          type: boolean

    val_Members:
      type: object
      additionalProperties: false
      description: |-
        Business Term: Scheme Members
        Definition: Information about the Members of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_member:
          description: |-
            Business Term: Scheme Member
            Definition: Information about a Member of the Scheme.
            Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
          items:
            oneOf:
              - "$ref": "#/components/schemas/val_MemberChoice1"
              - "$ref": "#/components/schemas/val_MemberChoice2"
          minItems: 1
          type: array
      required:
        - val_member
      xml:
        prefix: val
        name: members

    val_MemberChoice1:
      additionalProperties: false
      description: |-
        Business Term: Scheme Member
        Definition: Information about a Member of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_date_of_birth:
          description: |-
            Business Term: Date Of Birth
            Definition: The date of birth of the member.
            Purpose: To be able to uniquely identify a member within a scheme.
          type: string
          format: date
          xml:
            prefix: val
            name: date_of_birth
        val_leaving_date:
          description: |-
            Business Term: Leaving Date
            Definition: The date the member left/is due to leave the scheme.
            Purpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.
          type: string
          format: date
          xml:
            prefix: val
            name: leaving_date
      required:
        - val_date_of_birth
      xml:
        prefix: val
        name: member
      type: object
    val_MemberChoice2:
      additionalProperties: false
      description: |-
        Business Term: Scheme Member
        Definition: Information about a Member of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_leaving_date:
          description: |-
            Business Term: Leaving Date
            Definition: The date the member left/is due to leave the scheme.
            Purpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.
          type: string
          format: date
          xml:
            prefix: val
            name: leaving_date
      xml:
        prefix: val
        name: member
      type: object
    NullableEnumModel:
      type: object
      properties:
        enumProp:
          type: string
          nullable: true
          enum:
            - a
            - b
            - null
    SubCategory:
      type: object
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/Category'
            - type: object
              properties:
                foo:
                  type: boolean
                bar:
                  type: integer
                beer:
                  type: string
                drunk:
                  $ref: '#/components/schemas/User'
        category2:
          $ref: '#/components/schemas/Category'
        pets:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Pet"


  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header

15:17:59.211 [Thread-1] DEBUG io.swagger.v3.parser.OpenAPIV3Parser - Loaded raw data: openapi: 3.0.2
servers: []
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      operationId: addPet
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
    put:
      tags:
        - pet
      summary: Update an existing pet
      operationId: updatePet
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - pending
                - sold
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: >-
        Muliple tags can be provided with comma separated strings. Use\ \ tag1,
        tag2, tag3 for testing.
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      deprecated: true
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the pet
                  type: string
                status:
                  description: Updated status of the pet
                  type: string
    delete:
      tags:
        - pet
      summary: Deletes a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /pet/feed/{petId}:
    post:
      tags:
        - pet
      summary: Find pet by ID
      description: schedule pet feeding
      operationId: feedPet
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
        - name: petType
          in: query
          description: type of food
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: status
          required: true
          schema:
            type: string
        - name: sessionId
          in: cookie
          description: session id
          required: true
          schema:
            type: string
        - name: token
          in: header
          description: status
          required: true
          schema:
            type: string
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        200:
          description: successful operation

  '/pet/{petId}/uploadImage':
    post:
      tags:
        - pet
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary

  /pet/category:
    post:
      tags:
        - pet
      operationId: doCategoryStuff
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
  /store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - store
      summary: Place an order for a pet
      operationId: placeOrder
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true
  '/store/order/{orderId}':
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.\ \ Other
        values will generated exceptions
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: >-
        For valid response try integer IDs with positive integer value.\ \
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
  /user/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithArrayInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /parrot:
    post:
      tags:
        - pet
      summary: Add a new parrow to the store
      operationId: addParrot
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/Macaw"
                  - "$ref": "#/components/schemas/Parakeet"
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - "$ref": "#/components/schemas/Macaw"
                - "$ref": "#/components/schemas/Parakeet"

    put:
      tags:
        - pet
      summary: update parrots
      operationId: updateParrots
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  parrots:
                    type: array
                    items:
                      oneOf:
                        - "$ref": "#/components/schemas/Macaw"
                        - "$ref": "#/components/schemas/Parakeet"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parrots:
                  type: array
                  items:
                    anyOf:
                      - "$ref": "#/components/schemas/Macaw"
                      - "$ref": "#/components/schemas/Parakeet"

    get:
      tags:
        - pet
      summary: get Parrots
      operationId: getParrots
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - "$ref": "#/components/schemas/Macaw"
                    - "$ref": "#/components/schemas/Parakeet"
  /test:
    get:
      security:
        - bearer: []
      operationId: testMethod
      responses:
        200:
          description: peticion realizada con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      example:
        - id: 100
          name: Mammal
          subcategories:
            - id: 110
              name: Yinotheria
            - id: 120
              name: Theriiformes
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Test:
      type: string
      example: ""

    PartOne:
      properties:
        name:
          type: string
          description: A test description
    PartTwo:
      properties:
        id:
          type: string
    PartThree:
      properties:
        otherId:
          type: string
    PartFour:
      properties:
        otherIdPart:
          type: string
    PartMaster:
      properties:
        destination:
          oneOf:
            - $ref: '#/components/schemas/PartOne'
            - $ref: '#/components/schemas/PartTwo'
        origin:
          oneOf:
            - $ref: '#/components/schemas/PartThree'
            - $ref: '#/components/schemas/PartFour'

    Pet:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
        part:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/Dog"
              - $ref: "#/components/schemas/Cat"
      xml:
        name: Pet

    Pup:
      oneOf:
        - $ref: "#/components/schemas/Dog"
        - $ref: "#/components/schemas/Cat"
      properties:
        id:
          type: integer
          format: int64
    AllPetsResponse:
      type: array
      items:
        oneOf:
          - $ref: "#/components/schemas/Dog"
          - $ref: "#/components/schemas/Cat"
        discriminator:
          propertyName: pet_type

    Dog:
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            bark:
              type: boolean
            breed:
              type: string
              enum: [Dingo, Husky, Retriever, Shepherd]
    Cat:
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            hunts:
              type: boolean
            age:
              type: integer
    Macaw:
      type: object
      properties:
        color:
          type: string
        singer:
          type: boolean

    Parakeet:
      type: object
      properties:
        color:
          type: string
        soundRepeater:
          type: boolean

    val_Members:
      type: object
      additionalProperties: false
      description: |-
        Business Term: Scheme Members
        Definition: Information about the Members of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_member:
          description: |-
            Business Term: Scheme Member
            Definition: Information about a Member of the Scheme.
            Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
          items:
            oneOf:
              - "$ref": "#/components/schemas/val_MemberChoice1"
              - "$ref": "#/components/schemas/val_MemberChoice2"
          minItems: 1
          type: array
      required:
        - val_member
      xml:
        prefix: val
        name: members

    val_MemberChoice1:
      additionalProperties: false
      description: |-
        Business Term: Scheme Member
        Definition: Information about a Member of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_date_of_birth:
          description: |-
            Business Term: Date Of Birth
            Definition: The date of birth of the member.
            Purpose: To be able to uniquely identify a member within a scheme.
          type: string
          format: date
          xml:
            prefix: val
            name: date_of_birth
        val_leaving_date:
          description: |-
            Business Term: Leaving Date
            Definition: The date the member left/is due to leave the scheme.
            Purpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.
          type: string
          format: date
          xml:
            prefix: val
            name: leaving_date
      required:
        - val_date_of_birth
      xml:
        prefix: val
        name: member
      type: object
    val_MemberChoice2:
      additionalProperties: false
      description: |-
        Business Term: Scheme Member
        Definition: Information about a Member of the Scheme.
        Purpose: To have enough information to be able to produce a Statement of Account indicating premium due.
      properties:
        val_leaving_date:
          description: |-
            Business Term: Leaving Date
            Definition: The date the member left/is due to leave the scheme.
            Purpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.
          type: string
          format: date
          xml:
            prefix: val
            name: leaving_date
      xml:
        prefix: val
        name: member
      type: object
    NullableEnumModel:
      type: object
      properties:
        enumProp:
          type: string
          nullable: true
          enum:
            - a
            - b
            - null
    SubCategory:
      type: object
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/Category'
            - type: object
              properties:
                foo:
                  type: boolean
                bar:
                  type: integer
                beer:
                  type: string
                drunk:
                  $ref: '#/components/schemas/User'
        category2:
          $ref: '#/components/schemas/Category'
        pets:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Pet"


  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header

15:17:59.269 [Thread-1] DEBUG io.swagger.v3.parser.OpenAPIV3Parser - Parsed rootNode: {"openapi":"3.0.2","servers":[],"info":{"description":"This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n","version":"1.0.0","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"paths":{"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","operationId":"addPet","responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"requestBody":{"$ref":"#/components/requestBodies/Pet"}},"put":{"tags":["pet"],"summary":"Update an existing pet","operationId":"updatePet","responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"requestBody":{"$ref":"#/components/requestBodies/Pet"}}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"explode":true,"schema":{"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"}}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Pet"}}},"application/xml":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Pet"}}}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"explode":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Pet"}}},"application/xml":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Pet"}}}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pet"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Pet"}}}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","operationId":"updatePetWithForm","parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"name":{"description":"Updated name of the pet","type":"string"},"status":{"description":"Updated status of the pet","type":"string"}}}}}}},"delete":{"tags":["pet"],"summary":"Deletes a pet","operationId":"deletePet","parameters":[{"name":"api_key","in":"header","required":false,"schema":{"type":"string"}},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/feed/{petId}":{"post":{"tags":["pet"],"summary":"Find pet by ID","description":"schedule pet feeding","operationId":"feedPet","parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"petType","in":"query","description":"type of food","required":true,"schema":{"type":"string"}},{"name":"status","in":"query","description":"status","required":true,"schema":{"type":"string"}},{"name":"sessionId","in":"cookie","description":"session id","required":true,"schema":{"type":"string"}},{"name":"token","in":"header","description":"status","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Pet object that needs to be added to the store","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pet"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Pet"}}},"required":true},"responses":{"200":{"description":"successful operation"}}}},"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","operationId":"uploadFile","parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"requestBody":{"content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}}}},"/pet/category":{"post":{"tags":["pet"],"operationId":"doCategoryStuff","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubCategory"}}}}}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}}}},"security":[{"api_key":[]}]}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","operationId":"placeOrder","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Invalid Order"}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}},"description":"order placed for purchasing the pet","required":true}}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value >= 1 and <= 10.\\ \\ Other values will generated exceptions","operationId":"getOrderById","parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"schema":{"type":"integer","format":"int64","minimum":1,"maximum":10}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value.\\ \\ Negative or non-integer values will generate API errors","operationId":"deleteOrder","parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"schema":{"type":"integer","format":"int64","minimum":1}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","responses":{"default":{"description":"successful operation"}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"description":"Created user object","required":true}}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","operationId":"createUsersWithArrayInput","responses":{"default":{"description":"successful operation"}},"requestBody":{"$ref":"#/components/requestBodies/UserArray"}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","operationId":"createUsersWithListInput","responses":{"default":{"description":"successful operation"}},"requestBody":{"$ref":"#/components/requestBodies/UserArray"}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","operationId":"loginUser","parameters":[{"name":"username","in":"query","description":"The user name for login","required":true,"schema":{"type":"string"}},{"name":"password","in":"query","description":"The password for login in clear text","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","headers":{"X-Rate-Limit":{"description":"calls per hour allowed by the user","schema":{"type":"integer","format":"int32"}},"X-Expires-After":{"description":"date in UTC when token expires","schema":{"type":"string","format":"date-time"}}},"content":{"application/json":{"schema":{"type":"string"}},"application/xml":{"schema":{"type":"string"}}}},"400":{"description":"Invalid username/password supplied"}}}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","operationId":"logoutUser","responses":{"default":{"description":"successful operation"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","operationId":"getUserByName","parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"application/xml":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"description":"Updated user object","required":true}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/parrot":{"post":{"tags":["pet"],"summary":"Add a new parrow to the store","operationId":"addParrot","responses":{"405":{"description":"Invalid input"},"200":{"description":"successful operation","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/Macaw"},{"$ref":"#/components/schemas/Parakeet"}]}}}}},"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/Macaw"},{"$ref":"#/components/schemas/Parakeet"}]}}}}},"put":{"tags":["pet"],"summary":"update parrots","operationId":"updateParrots","responses":{"405":{"description":"Invalid input"},"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"parrots":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/Macaw"},{"$ref":"#/components/schemas/Parakeet"}]}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"parrots":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/Macaw"},{"$ref":"#/components/schemas/Parakeet"}]}}}}}}}},"get":{"tags":["pet"],"summary":"get Parrots","operationId":"getParrots","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/Macaw"},{"$ref":"#/components/schemas/Parakeet"}]}}}}}}}},"/test":{"get":{"security":[{"bearer":[]}],"operationId":"testMethod","responses":{"200":{"description":"peticion realizada con exito","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Test"}}}}}}}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"},"components":{"schemas":{"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean","default":false}},"xml":{"name":"Order"}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"subcategories":{"type":"array","items":{"$ref":"#/components/schemas/Category"}}},"example":[{"id":100,"name":"Mammal","subcategories":[{"id":110,"name":"Yinotheria"},{"id":120,"name":"Theriiformes"}]}],"xml":{"name":"Category"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Test":{"type":"string","example":""},"PartOne":{"properties":{"name":{"type":"string","description":"A test description"}}},"PartTwo":{"properties":{"id":{"type":"string"}}},"PartThree":{"properties":{"otherId":{"type":"string"}}},"PartFour":{"properties":{"otherIdPart":{"type":"string"}}},"PartMaster":{"properties":{"destination":{"oneOf":[{"$ref":"#/components/schemas/PartOne"},{"$ref":"#/components/schemas/PartTwo"}]},"origin":{"oneOf":[{"$ref":"#/components/schemas/PartThree"},{"$ref":"#/components/schemas/PartFour"}]}}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string","example":"doggie"},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]},"part":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/Dog"},{"$ref":"#/components/schemas/Cat"}]}}},"xml":{"name":"Pet"}},"Pup":{"oneOf":[{"$ref":"#/components/schemas/Dog"},{"$ref":"#/components/schemas/Cat"}],"properties":{"id":{"type":"integer","format":"int64"}}},"AllPetsResponse":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/Dog"},{"$ref":"#/components/schemas/Cat"}],"discriminator":{"propertyName":"pet_type"}}},"Dog":{"allOf":[{"$ref":"#/components/schemas/Pet"},{"type":"object","properties":{"bark":{"type":"boolean"},"breed":{"type":"string","enum":["Dingo","Husky","Retriever","Shepherd"]}}}]},"Cat":{"allOf":[{"$ref":"#/components/schemas/Pet"},{"type":"object","properties":{"hunts":{"type":"boolean"},"age":{"type":"integer"}}}]},"Macaw":{"type":"object","properties":{"color":{"type":"string"},"singer":{"type":"boolean"}}},"Parakeet":{"type":"object","properties":{"color":{"type":"string"},"soundRepeater":{"type":"boolean"}}},"val_Members":{"type":"object","additionalProperties":false,"description":"Business Term: Scheme Members\nDefinition: Information about the Members of the Scheme.\nPurpose: To have enough information to be able to produce a Statement of Account indicating premium due.","properties":{"val_member":{"description":"Business Term: Scheme Member\nDefinition: Information about a Member of the Scheme.\nPurpose: To have enough information to be able to produce a Statement of Account indicating premium due.","items":{"oneOf":[{"$ref":"#/components/schemas/val_MemberChoice1"},{"$ref":"#/components/schemas/val_MemberChoice2"}]},"minItems":1,"type":"array"}},"required":["val_member"],"xml":{"prefix":"val","name":"members"}},"val_MemberChoice1":{"additionalProperties":false,"description":"Business Term: Scheme Member\nDefinition: Information about a Member of the Scheme.\nPurpose: To have enough information to be able to produce a Statement of Account indicating premium due.","properties":{"val_date_of_birth":{"description":"Business Term: Date Of Birth\nDefinition: The date of birth of the member.\nPurpose: To be able to uniquely identify a member within a scheme.","type":"string","format":"date","xml":{"prefix":"val","name":"date_of_birth"}},"val_leaving_date":{"description":"Business Term: Leaving Date\nDefinition: The date the member left/is due to leave the scheme.\nPurpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.","type":"string","format":"date","xml":{"prefix":"val","name":"leaving_date"}}},"required":["val_date_of_birth"],"xml":{"prefix":"val","name":"member"},"type":"object"},"val_MemberChoice2":{"additionalProperties":false,"description":"Business Term: Scheme Member\nDefinition: Information about a Member of the Scheme.\nPurpose: To have enough information to be able to produce a Statement of Account indicating premium due.","properties":{"val_leaving_date":{"description":"Business Term: Leaving Date\nDefinition: The date the member left/is due to leave the scheme.\nPurpose: To identify those members that have left or are due to leave the scheme. To be able to calculate the benefit insured/premium payable in respect of the member/category.","type":"string","format":"date","xml":{"prefix":"val","name":"leaving_date"}}},"xml":{"prefix":"val","name":"member"},"type":"object"},"NullableEnumModel":{"type":"object","properties":{"enumProp":{"type":"string","nullable":true,"enum":["a","b",null]}}},"SubCategory":{"type":"object","properties":{"category":{"allOf":[{"$ref":"#/components/schemas/Category"},{"type":"object","properties":{"foo":{"type":"boolean"},"bar":{"type":"integer"},"beer":{"type":"string"},"drunk":{"$ref":"#/components/schemas/User"}}}]},"category2":{"$ref":"#/components/schemas/Category"},"pets":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/Pet"}]}}}}},"requestBodies":{"Pet":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pet"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Pet"}}},"description":"Pet object that needs to be added to the store","required":true},"UserArray":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}},"description":"List of user object","required":true}},"securitySchemes":{"bearer":{"type":"http","scheme":"bearer"},"petstore_auth":{"type":"oauth2","flows":{"implicit":{"authorizationUrl":"http://petstore.swagger.io/oauth/dialog","scopes":{"write:pets":"modify pets in your account","read:pets":"read your pets"}}}},"api_key":{"type":"apiKey","name":"api_key","in":"header"}}}}
15:17:59.376 [Thread-1] WARN io.swagger.codegen.v3.ignore.CodegenIgnoreProcessor - Output directory does not exist, or is inaccessible. No file (.swagger-codegen-ignore) will be evaluated.
15:17:59.447 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.449 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.450 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.451 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.451 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.452 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.453 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.454 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.469 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.479 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.479 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.479 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.480 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.480 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.480 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.481 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.482 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.483 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.483 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.483 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.483 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.496 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.496 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.496 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.496 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.497 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.497 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.497 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.498 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.498 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.498 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.498 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.500 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.500 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.500 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.500 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.500 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.502 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.502 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.502 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.502 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.502 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.503 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.504 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.505 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.507 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.507 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.507 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.508 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.514 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.516 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.516 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.516 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.517 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.520 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.521 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.521 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.523 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.523 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.529 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.534 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.535 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.535 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.536 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.536 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.536 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.536 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.537 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.538 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.538 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.539 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.539 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.539 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.540 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.541 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.541 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.541 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.541 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.544 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.604 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/AllPetsResponse.java
15:17:59.615 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Body.java
15:17:59.623 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Body1.java
15:17:59.632 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Cat.java
15:17:59.640 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Category.java
15:17:59.652 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Dog.java
15:17:59.661 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/InlineResponse200.java
15:17:59.669 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Macaw.java
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.669 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.681 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/ModelApiResponse.java
15:17:59.682 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.689 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/NullableEnumModel.java
15:17:59.695 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Order.java
15:17:59.703 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Parakeet.java
15:17:59.708 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/PartFour.java
15:17:59.712 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/PartMaster.java
15:17:59.718 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/PartOne.java
15:17:59.722 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/PartThree.java
15:17:59.725 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/PartTwo.java
15:17:59.730 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Pet.java
15:17:59.738 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Pup.java
15:17:59.745 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/SubCategory.java
15:17:59.749 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Tag.java
15:17:59.750 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/Test.java
15:17:59.755 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/User.java
15:17:59.762 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/ValMemberChoice1.java
15:17:59.766 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/ValMemberChoice2.java
15:17:59.769 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/model/ValMembers.java
15:17:59.781 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.782 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.782 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.783 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.783 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.789 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.789 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.790 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.790 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.791 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.797 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<Pet>
15:17:59.799 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.800 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.800 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.800 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.800 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.808 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<String>
15:17:59.812 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<Pet>
15:17:59.815 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.816 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.816 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.816 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.816 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.817 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<String>
15:17:59.817 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: Pet
15:17:59.818 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.818 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.818 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.819 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.819 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.830 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.830 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.830 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.830 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.830 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.837 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: ModelApiResponse
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.837 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.java.AbstractJavaCodegen - ApiResponse (reserved word) cannot be used as model name. Renamed to ModelApiResponse
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.839 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.840 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.840 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.840 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.840 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.840 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.841 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: Map<String, Integer>
15:17:59.844 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: Order
15:17:59.848 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: Order
15:17:59.860 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<User>
15:17:59.865 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<User>
15:17:59.872 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: User
15:17:59.876 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - Empty operationId found for path: put /user/{username}. Renamed to auto-generated operationId: userUsernamePut
15:17:59.880 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.880 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.881 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.881 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.881 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.883 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.883 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.883 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.883 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<Object>
15:17:59.884 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.884 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.884 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.884 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.885 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.885 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.885 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.885 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.886 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.887 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: InlineResponse200
15:17:59.888 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.888 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.888 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.889 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.889 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.890 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.890 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.890 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.890 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: Object
15:17:59.891 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.891 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.891 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.894 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.896 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.896 [Thread-1] WARN io.swagger.codegen.v3.generators.DefaultCodegenConfig - String to be sanitized is null. Default to Object
15:17:59.897 [Thread-1] DEBUG io.swagger.codegen.v3.generators.DefaultCodegenConfig - Property type is not primitive: List<String>
15:17:59.902 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/api/ParrotApi.java
15:17:59.904 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/test/java/io/swagger/api/ParrotApiControllerIT.java
15:17:59.921 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/api/PetApi.java
15:17:59.923 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/test/java/io/swagger/api/PetApiControllerIT.java
15:17:59.928 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/api/StoreApi.java
15:17:59.929 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/test/java/io/swagger/api/StoreApiControllerIT.java
15:17:59.931 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/api/TestApi.java
15:17:59.937 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/test/java/io/swagger/api/TestApiControllerIT.java
15:17:59.949 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/api/UserApi.java
15:17:59.950 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/test/java/io/swagger/api/UserApiControllerIT.java
15:17:59.952 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/pom.xml
15:17:59.952 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/README.md
15:17:59.953 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/configuration/WebApplication.java
15:17:59.956 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/configuration/WebMvcConfiguration.java
15:17:59.958 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/configuration/SwaggerUiConfiguration.java
15:17:59.959 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/configuration/RFC3339DateFormat.java
15:17:59.960 [Thread-1] INFO io.swagger.codegen.v3.DefaultGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/resources/swagger.properties
15:17:59.963 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/src/main/java/io/swagger/configuration/CustomInstantDeserializer.java
15:17:59.964 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/.swagger-codegen-ignore
15:17:59.964 [Thread-1] INFO io.swagger.codegen.v3.AbstractGenerator - writing file /home/runner/work/swagger-codegen/swagger-codegen/generated/spring-mvc-j8-async-server-v3___petstore3composed___/.swagger-codegen/VERSION
