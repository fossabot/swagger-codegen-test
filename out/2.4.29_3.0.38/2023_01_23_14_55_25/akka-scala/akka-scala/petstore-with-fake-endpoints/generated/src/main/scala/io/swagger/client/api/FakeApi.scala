/**
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.Binary
import io.swagger.client.model.ByteArray
import io.swagger.client.model.Client
import java.util.Date
import org.joda.time.DateTime
import io.swagger.client.model.OuterBoolean
import io.swagger.client.model.OuterComposite
import io.swagger.client.model.OuterNumber
import io.swagger.client.model.OuterString
import io.swagger.client.model.User
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object FakeApi {

  /**
   * Test serialization of outer boolean types
   * 
   * Expected answers:
   *   code 200 : OuterBoolean (Output boolean)
   * 
   * @param body Input boolean as post body
   */
  def fakeOuterBooleanSerialize(body: Option[OuterBoolean] = None): ApiRequest[OuterBoolean] =
    ApiRequest[OuterBoolean](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake/outer/boolean", "application/json")
      .withBody(body)
      .withSuccessResponse[OuterBoolean](200)
        /**
   * Test serialization of object with outer number type
   * 
   * Expected answers:
   *   code 200 : OuterComposite (Output composite)
   * 
   * @param body Input composite as post body
   */
  def fakeOuterCompositeSerialize(body: Option[OuterComposite] = None): ApiRequest[OuterComposite] =
    ApiRequest[OuterComposite](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake/outer/composite", "application/json")
      .withBody(body)
      .withSuccessResponse[OuterComposite](200)
        /**
   * Test serialization of outer number types
   * 
   * Expected answers:
   *   code 200 : OuterNumber (Output number)
   * 
   * @param body Input number as post body
   */
  def fakeOuterNumberSerialize(body: Option[OuterNumber] = None): ApiRequest[OuterNumber] =
    ApiRequest[OuterNumber](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake/outer/number", "application/json")
      .withBody(body)
      .withSuccessResponse[OuterNumber](200)
        /**
   * Test serialization of outer string types
   * 
   * Expected answers:
   *   code 200 : OuterString (Output string)
   * 
   * @param body Input string as post body
   */
  def fakeOuterStringSerialize(body: Option[OuterString] = None): ApiRequest[OuterString] =
    ApiRequest[OuterString](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake/outer/string", "application/json")
      .withBody(body)
      .withSuccessResponse[OuterString](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 :  (Success)
   * 
   * @param body 
   * @param query 
   */
  def testBodyWithQueryParams(body: User, query: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "http://petstore.swagger.io:80/v2", "/fake/body-with-query-params", "application/json")
      .withBody(body)
      .withQueryParam("query", query)
      .withSuccessResponse[Unit](200)
        /**
   * To test \&quot;client\&quot; model
   * 
   * Expected answers:
   *   code 200 : Client (successful operation)
   * 
   * @param body client model
   */
  def testClientModel(body: Client): ApiRequest[Client] =
    ApiRequest[Client](ApiMethods.PATCH, "http://petstore.swagger.io:80/v2", "/fake", "application/json")
      .withBody(body)
      .withSuccessResponse[Client](200)
        /**
   * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 
   * 
   * Expected answers:
   *   code 400 :  (Invalid username supplied)
   *   code 404 :  (User not found)
   * 
   * Available security schemes:
   *   http_basic_test (basic)
   * 
   * @param number None
   * @param double None
   * @param patternWithoutDelimiter None
   * @param byte None
   * @param integer None
   * @param int32 None
   * @param int64 None
   * @param float None
   * @param string None
   * @param binary None
   * @param date None
   * @param dateTime None
   * @param password None
   * @param callback None
   */
  def testEndpointParameters(number: Double, double: Double, patternWithoutDelimiter: String, byte: ByteArray, integer: Option[Int] = None, int32: Option[Int] = None, int64: Option[Long] = None, float: Option[Float] = None, string: Option[String] = None, binary: Option[Binary] = None, date: Option[Date] = None, dateTime: Option[DateTime] = None, password: Option[String] = None, callback: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake", "application/xml; charset=utf-8")
      .withCredentials(basicAuth)
      .withFormParam("integer", integer)
      .withFormParam("int32", int32)
      .withFormParam("int64", int64)
      .withFormParam("number", number)
      .withFormParam("float", float)
      .withFormParam("double", double)
      .withFormParam("string", string)
      .withFormParam("pattern_without_delimiter", patternWithoutDelimiter)
      .withFormParam("byte", byte)
      .withFormParam("binary", binary)
      .withFormParam("date", date)
      .withFormParam("dateTime", dateTime)
      .withFormParam("password", password)
      .withFormParam("callback", callback)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](404)
        /**
   * To test enum parameters
   * 
   * Expected answers:
   *   code 400 :  (Invalid request)
   *   code 404 :  (Not found)
   * 
   * @param enumFormStringArray Form parameter enum test (string array)
   * @param enumFormString Form parameter enum test (string)
   * @param enumHeaderStringArray Header parameter enum test (string array)
   * @param enumHeaderString Header parameter enum test (string)
   * @param enumQueryStringArray Query parameter enum test (string array)
   * @param enumQueryString Query parameter enum test (string)
   * @param enumQueryInteger Query parameter enum test (double)
   * @param enumQueryDouble Query parameter enum test (double)
   */
  def testEnumParameters(enumFormStringArray: Seq[String], enumFormString: Option[String], enumHeaderStringArray: Seq[String], enumHeaderString: Option[String], enumQueryStringArray: Seq[String], enumQueryString: Option[String], enumQueryInteger: Option[Int] = None, enumQueryDouble: Option[Double] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "http://petstore.swagger.io:80/v2", "/fake", "*/*")
      .withFormParam("enum_form_string_array", ArrayValues(enumFormStringArray, CSV))
      .withFormParam("enum_form_string", enumFormString)
      .withFormParam("enum_query_double", enumQueryDouble)
      .withQueryParam("enum_query_string_array", ArrayValues(enumQueryStringArray, CSV))
      .withQueryParam("enum_query_string", enumQueryString)
      .withQueryParam("enum_query_integer", enumQueryInteger)
      .withHeaderParam("enum_header_string_array", ArrayValues(enumHeaderStringArray, CSV))
      .withHeaderParam("enum_header_string", enumHeaderString)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](404)
        /**
   * 
   * Expected answers:
   *   code 200 :  (successful operation)
   * 
   * @param param request body
   */
  def testInlineAdditionalProperties(param: Any): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://petstore.swagger.io:80/v2", "/fake/inline-additionalProperties", "application/json")
      .withBody(param)
      .withSuccessResponse[Unit](200)
        /**
   * 
   * Expected answers:
   *   code 200 :  (successful operation)
   * 
   * @param param field1
   * @param param2 field2
   */
  def testJsonFormData(param: String, param2: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "http://petstore.swagger.io:80/v2", "/fake/jsonFormData", "application/json")
      .withFormParam("param", param)
      .withFormParam("param2", param2)
      .withSuccessResponse[Unit](200)
      

}

